# Generated by Django 3.1.1 on 2020-12-05 04:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import shoppingmall.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
            ],
        ),
        migrations.CreateModel(
            name='Localize',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('uz', models.TextField(blank=True)),
                ('ru', models.TextField(blank=True)),
                ('en', models.TextField(blank=True)),
                ('kr', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
            ],
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('request_size', models.FloatField(default=0.0)),
                ('response_size', models.FloatField(default=0.0)),
                ('status_code', models.IntegerField(default=0)),
                ('server_type', models.CharField(choices=[('T', 'Telegram'), ('A', 'App'), ('D', 'Dashboard')], max_length=10)),
                ('method', models.CharField(choices=[('GET', 'GET'), ('POST', 'POST'), ('PUT', 'PUT'), ('DELETE', 'DELETE')], max_length=10)),
                ('path', models.CharField(max_length=250)),
                ('data_string', models.TextField(blank=True)),
                ('payload_string', models.TextField(blank=True)),
                ('shop_id', models.CharField(max_length=100)),
                ('user_id', models.IntegerField(default=0)),
                ('customer_id', models.IntegerField(default=0)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
            ],
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('buying', models.FloatField(default=0.0)),
                ('selling', models.FloatField(default=0.0)),
                ('quantity', models.IntegerField(default=0)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order_number', models.CharField(blank=True, max_length=100)),
                ('type', models.CharField(blank=True, choices=[('T', 'Telegram'), ('A', 'App'), ('D', 'Dashboard')], max_length=10)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=100)),
                ('address', models.TextField(blank=True)),
                ('address_image', models.URLField(blank=True)),
                ('language', models.CharField(choices=[('en', 'English'), ('ru', 'Russian'), ('uz', 'Uzbek'), ('kr', 'Korean')], default='uz', max_length=5)),
                ('total_buying', models.IntegerField(default=0)),
                ('total_selling', models.IntegerField(default=0)),
                ('delivery_fee', models.IntegerField(default=0)),
                ('posting_date', models.DateField(blank=True, max_length=20, null=True)),
                ('shipping_date', models.DateField(blank=True, max_length=20, null=True)),
                ('post_code', models.CharField(blank=True, max_length=100)),
                ('delivery_comment', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Accepted'), ('C', 'Cancel')], default='P', max_length=100)),
                ('delivery', models.CharField(blank=True, choices=[('P', 'Preparing'), ('S', 'Sent')], max_length=100, null=True)),
                ('payment', models.CharField(choices=[('paid', 'Paid'), ('unpaid', 'UnPaid')], default='unpaid', max_length=100)),
                ('deleted', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('plan', models.TextField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('buying', models.IntegerField(default=0)),
                ('selling', models.IntegerField(default=0)),
                ('has_discount', models.BooleanField(default=False)),
                ('discount', models.IntegerField(default=0)),
                ('quantity', models.IntegerField(default=0)),
                ('has_delivery_fee', models.BooleanField(default=False)),
                ('label', models.CharField(blank=True, choices=[('N', 'New'), ('S', 'Sale')], max_length=10)),
                ('unit', models.CharField(blank=True, choices=[('', ''), ('kg', 'kg'), ('pc', 'pc')], max_length=10)),
                ('currency', models.CharField(choices=[('', ''), ('KRW', 'KRW'), ('USD', 'USD'), ('UZS', 'UZS')], default='KRW', max_length=10)),
                ('overable', models.BooleanField(default=False)),
                ('has_option', models.BooleanField(default=False)),
                ('banner', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('data', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('date_modified', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_modified')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shoppingmall.category')),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shoppingmall.collection')),
                ('descriptions', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='descriptions', to='shoppingmall.localize')),
            ],
        ),
        migrations.CreateModel(
            name='ShopConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('telegram_store', models.TextField(blank=True)),
                ('telegram_new_order', models.TextField(blank=True)),
                ('telegram_accept', models.TextField(blank=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('telegram_enabled', models.BooleanField(default=False)),
                ('app_enabled', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_admin', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='admin_status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff_status')),
                ('email', models.CharField(max_length=100, null=True, unique=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
            bases=('shoppingmall.user',),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=100)),
                ('type', models.CharField(choices=[('telegram', 'Telegram'), ('app', 'App')], default='telegram', max_length=10)),
                ('province', models.CharField(blank=True, max_length=100)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('address_image', models.ImageField(null=True, upload_to=shoppingmall.models.customer_address_directory_path)),
                ('language', models.CharField(choices=[('en', 'English'), ('ru', 'Russian'), ('uz', 'Uzbek'), ('kr', 'Korean')], default='uz', max_length=5)),
                ('deleted', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('shoppingmall.user',),
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('province', models.CharField(blank=True, max_length=100, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('bank', models.TextField()),
                ('address', models.TextField(blank=True, null=True)),
                ('phone_number', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(null=True, upload_to=shoppingmall.models.shop_photo_directory_path)),
                ('currency', models.CharField(choices=[('', ''), ('KRW', 'KRW'), ('USD', 'USD'), ('UZS', 'UZS')], default='KRW', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approve', 'Approve')], default='pending', max_length=8)),
                ('sell_option', models.CharField(choices=[('self-service', 'Self-Service'), ('universal', 'Universal')], default='universal', max_length=20)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('config', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shoppingmall.shopconfig')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.organization')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('image', models.ImageField(null=True, upload_to=shoppingmall.models.product_photo_directory_path)),
                ('is_main', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shoppingmall.product')),
                ('shop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.shop')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.shop'),
        ),
        migrations.AddField(
            model_name='product',
            name='titles',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='titles', to='shoppingmall.localize'),
        ),
        migrations.CreateModel(
            name='OrderedProduct',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(default=0)),
                ('buying', models.FloatField(default=0.0)),
                ('selling', models.FloatField(default=0.0)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.options')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.product')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.shop'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.user'),
        ),
        migrations.CreateModel(
            name='OptionValue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='option', to='shoppingmall.options')),
            ],
        ),
        migrations.AddField(
            model_name='options',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='option', to='shoppingmall.product'),
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('product', 'Product'), ('collection', 'Collection')], max_length=20)),
                ('image', models.ImageField(null=True, upload_to=shoppingmall.models.photo_directory_path)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('shop', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.shop')),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryPolicy',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, choices=[('', ''), ('kg', 'kg'), ('pc', 'pc')], max_length=10)),
                ('unit_from', models.IntegerField(default=0)),
                ('unit_to', models.IntegerField(default=0)),
                ('fee', models.IntegerField(default=0.0)),
                ('currency', models.CharField(choices=[('', ''), ('KRW', 'KRW'), ('USD', 'USD'), ('UZS', 'UZS')], default='KRW', max_length=10)),
                ('comment', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.shop')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionImages',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('telegram_image', models.ImageField(null=True, upload_to=shoppingmall.models.photo_directory_path)),
                ('app_image', models.ImageField(null=True, upload_to=shoppingmall.models.photo_directory_path)),
                ('language', models.CharField(blank=True, choices=[('en', 'English'), ('ru', 'Russian'), ('uz', 'Uzbek'), ('kr', 'Korean')], max_length=10)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collection', to='shoppingmall.collection')),
                ('shop', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shoppingmall.shop')),
            ],
        ),
        migrations.AddField(
            model_name='collection',
            name='shop',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.shop'),
        ),
        migrations.AddField(
            model_name='collection',
            name='titles',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shoppingmall.localize'),
        ),
        migrations.AddField(
            model_name='category',
            name='titles',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shoppingmall.localize'),
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, choices=[('image', 'image'), ('video', 'Video')], max_length=10)),
                ('image', models.ImageField(null=True, upload_to=shoppingmall.models.photo_directory_path)),
                ('video', models.FileField(null=True, upload_to=shoppingmall.models.photo_directory_path)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('descriptions', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcement_descriptions', to='shoppingmall.localize')),
                ('shop', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.shop')),
                ('titles', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='announcement_titles', to='shoppingmall.localize')),
            ],
        ),
        migrations.CreateModel(
            name='ShopView',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.shop')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('is_shop_admin', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='shop_admin_status')),
                ('is_shop_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='shop_staff_status')),
                ('email', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('province', models.CharField(max_length=50)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=10)),
                ('age', models.IntegerField()),
                ('language', models.CharField(choices=[('en', 'English'), ('ru', 'Russian'), ('uz', 'Uzbek'), ('kr', 'Korean')], default='uz', max_length=5)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.organization')),
            ],
            options={
                'abstract': False,
            },
            bases=('shoppingmall.user',),
        ),
        migrations.CreateModel(
            name='ProductView',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.product')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.shop')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.customer')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='shop',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shoppingmall.shop'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date_created')),
                ('option', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.options')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.product')),
                ('shop', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.shop')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shoppingmall.customer')),
            ],
        ),
    ]
